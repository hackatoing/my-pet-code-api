version: 3

env:
  DOTENV_DEV: local/dotenvs/dev.env
  DOTENV_TEST: local/dotenvs/test.env

tasks:
  init:
    desc: "Init Python project."
    env:
      # Create .venv inside project directory.
      # It helps with moving/renaming the project, also with IDEs.
      POETRY_VIRTUALENVS_IN_PROJECT: true
    cmds:
      - poetry install

  format:
    desc: "Apply formatting to python files following best practices."
    cmds:
      - poetry run isort .
      - poetry run black .

  lint:
    desc: "Linter for Python - does not apply changes."
    cmds:
      - poetry run isort --check .
      - poetry run black --check .
      - poetry run flakeheaven lint
  
  deps-up:
    desc: "Init local dependencies for development"
    cmds:
      - docker compose -f local/docker-compose.yaml up -d
      - |
        export $(grep -v '^#' {{ .DOTENV_DEV }} | xargs) \
          && poetry run alembic upgrade head
      - |
        export $(grep -v '^#' {{ .DOTENV_TEST }} | xargs) \
          && poetry run alembic upgrade head

  deps-down:
    desc: "Stop local dependencies"
    cmds:
      - docker compose -f local/docker-compose.yaml down
  
  db-downgrade:
    desc: "Downgrade database to base"
    cmds:
      - |
        export $(grep -v '^#' {{ .DOTENV_DEV }} | xargs) \
          && poetry run alembic downgrade base
      - |
        export $(grep -v '^#' {{ .DOTENV_TEST }} | xargs) \
          && poetry run alembic downgrade base

  tests:
    desc: "Run all the tests."
    cmds:
      - |
        export $(grep -v '^#' {{ .DOTENV_TEST }} | xargs) \
          && poetry run pytest tests

  run:
    desc: "Run app locally."
    cmds:
      - |
        export $(grep -v '^#' {{ .DOTENV_DEV }} | xargs) \
          && poetry run uvicorn app.main:create_app --factory --reload
  
  clean:
    desc: "Clean project"
    cmds:
      - find . -name "*.pyc" | xargs rm --recursive --force
      - find . -name "__pycache__" | xargs rm --recursive --force
      - find . -name ".pytest_cache" | xargs rm --recursive --force
